##################################################################
def greeting(userid)
##################################################################
name_for_userid = {
    382: "Alex",
    590: "Joao",
    951: "Pedro",
}

def greeting(userid):
    return "Ola %s!" % name_for_userid.get(userid, "Pessoa")

codigo =  greeting(input("Digite seu codigo: "))

print(codigo)

##################################################################
namedtuple
##################################################################
import collections as col

Empregado = col.namedtuple('Empregado', ['name', 'city', 'salary'])

e1 = Empregado('Alex', 'Itapira', '2000')
e2 = Empregado('Alex', 'Mogi Mirim', '900')

print('O nome e salario do e1 e: ' + e1[0] + ' e seu salario: ' + e1[2])
print('A cidade de e2 e: ' + e2[1])

##################################################################
time / timeit
##################################################################
import time
import timeit

def alguma_funcao():
    for i in range(1, 20):
        time.sleep(1)

inicio = timeit.default_timer()
alguma_funcao()
fim = timeit.default_timer()
print ('duracao: %f' % (fim - inicio))


função pow (exponenciação)

pow(2,3)
dois elevado a terceira potencia

extrair a raiz quadrada com pow: raiz quadrada é qualquer número elevado a meio

=====
pow(16,1,2)

2**3 (a mesma coisa)
2**1,2

======
Round (arredondamento)

round (5/6,3)
round 1/3, 6)

======
Divmod (divisão por número inteiro)

divmod(10,6)
divmod(3,2)





