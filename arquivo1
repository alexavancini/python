#===========================================================================================#
#print
#===========================================================================================#

print ('Hellow world!')
print ("Hellow World")

print (2+2)

print ('2+2')
print ('2'+'2')

2+2
2-2
2*2
2/2

'2'+'2'

print ('olá' + 2)
print ('olá' + '2')
print ('olá' , 2)

print('1,2,3,4,5,6,7,8,9,10)

#-------------------------------------------------------------------------------------------#
#sep
#-------------------------------------------------------------------------------------------#

print('1,2,3,4,5,6,7,8,9,10, sep='/')
print('1,2,3,4,5,6,7,8,9,10, sep='-')
print('1,2,3,4,5,6,7,8,9,10, sep='==')
print('1,2,3,4,5,6,7,8,9,10, sep='~')

print('Ola','Mundo', sep='~')

#-------------------------------------------------------------------------------------------#
#.join, lista intellisense
#-------------------------------------------------------------------------------------------#

lista14 = ['1', '2', '3', '4']

s = "-"
s = s.join(lista14)
print(s)

s = "0"
s = s.join(lista14)
print(s)


lista15 = ['g','e','e','k', 's']
print("".join(lista15))
print("-".join(lista15))
print("#".join(lista15))
print("~".join(lista15))

#-------------------------------------------------------------------------------------------#
#end
#-------------------------------------------------------------------------------------------#

print('Ola, Mundo! ', end ='')
print('Ciao, Mondo! ')
print('Helow, World!')

print('Ola, Mundo! ', end ='')
print('Ciao, Mondo! ',  end ='')
print('Helow, World!')

print('Ola, Mundo! ', end ='& ')
print('Ciao, Mondo! ',  end ='& ')
print('Helow, World!')

print('Ola, Mundo! ', end ='& ')
print('Ciao, Mondo! ',  end ='& ')
print('Helow, World! ', end = '\n') #quebra de linha \n
print('Halo, Welt! ', end = '& ')
print('Bonjour, le monde! ')

#===========================================================================================#
#Comentário
#===========================================================================================#

#-------------------------------------------------------------------------------------------#
#Em python é possível comentar o código utilizando o carctaer #
#-------------------------------------------------------------------------------------------#

print('Ola, Mundo!') #Linha 1, português
print('Ciao, Mondo!') #Linha 2, italiano
print('Helow, World!') #Linha3, Inglês
print('Halo, Welt!') #Linha4, alemão
print('Bonjour, le monde!') #Linha 5, francês

#-------------------------------------------------------------------------------------------#
#Em python é possível comentar o código utilizando o carctaer '
#-------------------------------------------------------------------------------------------#

'''
É possível comentar várias
linhas utilizando várias aspas
consectuvas
'''

print('Ola, Mundo!') #Linha 1, português
print('Ciao, Mondo!') #Linha 2, italiano
print('Helow, World!') #Linha3, Inglês
print('Halo, Welt!') #Linha4, alemão
print('Bonjour, le monde!') #Linha 5, francês

#===========================================================================================#
#variáveis
#===========================================================================================#

#-------------------------------------------------------------------------------------------#
#Atribuição - =
#-------------------------------------------------------------------------------------------#

a = 10
print(a)

a = b = 20
print(a)
print(b)

type(a)
type(b)

c = 5.5
d = 'python'
print(c)
print(d)

type(c)
type(d)


''''Python é uma linguagem de programação com declaração de variável dinâmica,
O que significa que o interpretador detecta o tipo da variável automaticamente,
o programador, nesta linguagem, não precisa declarar o tipo da variável no momento
da declaração. Isto não ocorre em todas as linguagens de programação disponíveis. ''''

#-------------------------------------------------------------------------------------------#
#Atribuindo valores a várias variáveis
#-------------------------------------------------------------------------------------------#


idade_rafael, idade_marcos, idade_lucas = 15,20,30
print(idade_rafael, idade_marcos, idade_lucas)

end_rafael, end_marcos, end_lucas = 'Rua dos ipes', 'Rua das margaridas', 'Rua das araucarias'
print(end_rafael, end_marcos, end_lucas)

#-------------------------------------------------------------------------------------------#
#Sensitive
#-------------------------------------------------------------------------------------------#

#a linguagem Python é case sensitive, ou seja, ela
#diferencia letras maiúsculas de minúsculas.

c1 = Centro-1
C1 = Correspondencia-1

c1
C1

#-------------------------------------------------------------------------------------------#
#valor inteiro (int)
#-------------------------------------------------------------------------------------------#

variavel1 = 10
variavel2 = 20
variavel3 = 30

variavel1
variavel2
variavel3

variavel1 + variavel2
variavel 3 - variavel 1
variavel1 + 2
variavel2 * 4
variavel3 / 6

valor1 = 50
valor2 = 100
valor3 = 200

valor1
valor2
valor3

valor1 + variavel2
variavel3 * valor2
valor3 / variavel1

#-------------------------------------------------------------------------------------------#
#valor decimal (float)
#-------------------------------------------------------------------------------------------#

(...)

#-------------------------------------------------------------------------------------------#
#valor hexadecimal (hex)
#-------------------------------------------------------------------------------------------#

(...)

#-------------------------------------------------------------------------------------------#
#valor binário (bin)
#-------------------------------------------------------------------------------------------#

(...)

#-------------------------------------------------------------------------------------------#
#valor texto (string)
#-------------------------------------------------------------------------------------------#

(...)



#===========================================================================================#
#Operadores aritiméticos
#===========================================================================================#

+ Soma
- Subtração
* Multiplicação
/ Divisão, retorna um valor decimal (float)
// Divisão retorna um valor inteiro (int)
** Exponenciação
% Módulo, retorna o resto da divisão


variavel1 + variavel2
variavel1 - variavel2
variavel1 * variavel2
variavel1 / variavel2

variavel1 + variavel2 + variavel3
variavel1 + (variavel2*variavel3)
variavel1 + (variavel2/variavel3*variavel1)

5**3 #exponenciação
10//9 #extração da parte inteira da divisão
7%2 #módulo (retorna o resto da divisão)

#===========================================================================================#
#Uso de () nas operações
#===========================================================================================#

#PEMDAS

(variavel1 + valor2) / variavel3
variavel1 + valor2 / variavel3

#===========================================================================================#
#Print com texto e valor de variáveis junto
#===========================================================================================#

idade_joao = 18
idade_pedro = 20
idade_francisco = 30

idade_joao
idade_pedro
idade_francisco

print ('a idade do João é' , idade_joao)
print ('a idade do Pedro é' , idade_pedro)
print ('a idade do Francisco é' , idade_francisco)

print ('a idade do João é' , idade_joao, 'e ele recebe', valor1, 'por hora')
print ('a idade do Pedro é' , idade_pedro, 'e ele recebe', valor2, 'por hora')
print ('a idade do Francisco é' , idade_francisco, 'e ele recebe', valor3, 'por hora')

#Exercício: A idade do __________ é ______, ele recebe R$ ____ por hora e já trabalhou ____ horas este mês.

#Sendo que
          #João recebe valor1 e já trabalhou variavel1
          #Pedro recebe valor2 e já trabalhou variavel2
          #Francisco recebe valor3 e já trabalhou variavel3


var1 = 10
var2 = var1
var3 = var2

print(var1,var2,var3)

var1 = 30
var2 = var1
var3 = var2
var4 = var1 + 20
var5 = var4 + 10

print(var1,var2,var3, var4, var5)

#Em python não é possível nomear variáveis com nomes que iniciam com número

cod1 = 7654321
1cod = 7654321 #erro



#===========================================================================================#
#Sistema de comparações no python
#===========================================================================================#

== (igual a)
!= (diferente de)
> (maior)
< (menor)
>= (maior ou igual)
<= (menor ou igual)

#Tomar cuidado com expressões do tipo a = 4 ou 10 = 100, neste caso está se declarando uma variável com o operador =

#-------------------------------------------------------------------------------------------#
#Operadores relacionais
#-------------------------------------------------------------------------------------------#

2 > 2
4 < 2
2.1 < 2
3 == 2
2 == 2 #igual
2 != 4 #diferente

#-------------------------------------------------------------------------------------------#
#Operadores relacionais compostos
#-------------------------------------------------------------------------------------------#

2 >= 2
2.1 >= 2
2 <= 2
2.1 <= 2

#===========================================================================================#
#Operadores lógicos
#===========================================================================================#

True
False

#===========================================================================================#
#Conectivos
#===========================================================================================#

#-------------------------------------------------------------------------------------------#
#and
#-------------------------------------------------------------------------------------------#

x = 1
print(x > 0 and x > 100)
False

x = 1
print(x > 0 and x < 100)
True

x = 1
print(x > 0 and x < 100)
True

#-------------------------------------------------------------------------------------------#
#or
#-------------------------------------------------------------------------------------------#

x = 1
y = 2

print(x > 0 or x < 0.99)
print(y == 2 or x == 2)

print(y <= 1.99 or x <= 0.99)
print(x == 2 or y == 4)

print(x != 1 or y != 2)
print(x == 1 or y == 2)

print(x == 1 or y == 2 or x != 1 or y != 2)
print(x == 1 or y == 3 or x != 1 or y != 2)
print(x == 2 or y == 3 or x != 1 or y != 2)

#===========================================================================================#
#associação - in, not in
#===========================================================================================#

print(19 in [16,17,18,19,20,21], '(está com in sem lista)')
print(19 not in [16,17,18,19,20,21], '(não está com not in sem lista)')

minhalista = [16,17,18,19,20,21]
print(19 in minhalista, '(com in, com lista)')
print(22 in minhalista, '(não está, com in, sem lista)')
print(19 not in minhalista, '(Falso pois ele está com not in, com lista)')

print('v' in 'Avancini', '(v no texto sem variável)')

meusobrenome = ('Avancini')
print('v' in meusobrenome, '(v no texto dentro da variável)')

#-------------------------------------------------------------------------------------------#
Desafio 1
#-------------------------------------------------------------------------------------------#
João e Pedro já trabalharam juntos _____ horas este mês.
Francisco trabalhou nesta semana ________ horas a mais que João.
João e Pedro juntos trabalharam ______ horas a mais que Francisco sozinho.
Francisco sozinho trabalhou apenas ____ horas a menos que João e Pedro juntos.

#-------------------------------------------------------------------------------------------#
Desafio 2
#-------------------------------------------------------------------------------------------#
O cargo do João nesta empresa é ____________.
  #Sendo que:
    #joão é Auxiliar administrativo.

#-------------------------------------------------------------------------------------------#
Desafio 3
#-------------------------------------------------------------------------------------------#
O cargo do João nesta empresa é _____________, do Pedro _______________ e do Francisco _______________.
  #Sendo que:
    #joão é o funcionario 1 e é Auxiliar administrativo.
    #Pedro é o funcionario 2 e é Gerente.
    #Francisco é o funcionario 3 e é Diretor.
    
funcionario1 = 'Joao'
funcionario2 = 'Pedro'
funcionario3 = 'Francisco'

cargo1 = 'auxiliar administrativo'
cargo2 = 'gerente'
cargo3 = 'diretor'

#-------------------------------------------------------------------------------------------#
Desafio 4
#-------------------------------------------------------------------------------------------#

#Exercício: A idade do __________ é ______, ele ocupa o cargo de ___________ ele recebe R$ ____ por hora e já trabalhou ____ horas este mês. 

#===========================================================================================#
String - str
#===========================================================================================#

variavel4 = 'palavra'
variavel5 = "bio"
variavel6 = 'logia'

print(type(variavel4))
print(type(variavel5))
print(type(variavel6))

''Em python é possível declarar uma variável do tipo string com aspas simples
ou aspas duplas.''


#-------------------------------------------------------------------------------------------#
#Concatenar variáveis de valor string
#-------------------------------------------------------------------------------------------#

variavel5 = 'bio'
variavel6 = 'logia'
print(variavel5 + variavel6)

variavel7 = 10
variavel8 = 20
print(variavel7+variavel8)

#===========================================================================================#
#Lista de palavras reservadas e que não pode ser utilizadas como variável
#palavras proibidas
#===========================================================================================#

#-------------------------------------------------------------------------------------------#
import keyword
print(keyword.kwlist)
#-------------------------------------------------------------------------------------------#
#caracteres proibidos
"",<>/|\()@#$%^*+-!
#-------------------------------------------------------------------------------------------#
#não pode haver variáveis que começam com números

2 = ('python')
#-------------------------------------------------------------------------------------------#
#não pode haver variáveis com espaços entre nomes

estudo python = 2
#-------------------------------------------------------------------------------------------#


#===========================================================================================#
#manipulação de strings
#===========================================================================================#

#-------------------------------------------------------------------------------------------#
#Indexação
#-------------------------------------------------------------------------------------------#


''A indexação em python começa com zero (0). Isso pode não ocorrer em outras linguagens
Por exemplo: em linguagem R começa em 1''

string1 = 'Biologia'
string1[1]
string1[0]
string1[5]
string1[7]

len(string1)


''É possível, também, referenciar a uma string com número negativo. 
Assim, -1 será o último caracter''

string1[-1]
string1[-2]
string1[-6]

''Fatiamento''

palavra = 'Geografia'
palavra

palavra[2]
palavra[4:]
palavra [3:6]

palavra[:] 'Imprimir a palavra inteira'
palavra[::2] 'Imprimi de duas em duas letras
palavra[::3] 'Imprimi de três em três letras
palavra[::4] 'Imprimi de quatro em quatro letras

palavra[1::2] 'Imprimi de dois em dois carácteres começando pelo índice 1'
palavra[2::2] 'Imprimi de dois em dois carácteres começando pelo índice 2'

palavra[::-2] 'Imprimi de dois em dois carácteres começando pelo índice -1, vogais'
palavra[-2::-2] 'Imprimi de dois em dois carácteres começando pelo índice -, cons.'

palavra[::-1] 'Inverte a palavra)
palavra[-5::-1] 'Inverte a palavra dentro do intervalo selecinado'


#Gerando um erro
#String são inalterados em python
palavra [1]='y'

#-------------------------------------------------------------------------------------------#
#len
#-------------------------------------------------------------------------------------------#

teste = ('python')
print(len(teste))
print(teste.capitalize())

string_grande = 'fd098f09d8f09d809f80d9'
string_grande

len(string_grande)

#Criando uma função para executar o len()
tamanhostr = len(string_grande)
tamanhostr

#-------------------------------------------------------------------------------------------#
#count
#-------------------------------------------------------------------------------------------#

teste2 = ('paralelepipido')
print(teste2.count('a')) 
print(teste2.count('e')) 
print(teste2.count('i')) 
print(teste2.count('o'))
print(teste2.count('u'))

#-------------------------------------------------------------------------------------------#
startswith
#-------------------------------------------------------------------------------------------#

teste2 = ('paralelepipido')
print(teste2.startswith('para'))
print(teste2.startswith('ara'))

#-------------------------------------------------------------------------------------------#
#endwith
#-------------------------------------------------------------------------------------------#

teste2 = ('paralelepipido')
print(teste2.endswith('pido')) #endswith
print(teste2.endswith('pida')) #endswith

#-------------------------------------------------------------------------------------------#
#isalnum
#-------------------------------------------------------------------------------------------#

teste3 = ('!@#$%a')
teste4 = ('2aa2213')
teste5 = ('abcde')
teste6 = ('Abcde')
teste7 = ('ABCDE')

print(teste3.isalnum())
print(teste4.isalnum())
print(teste5.isalpha()) #Retorna False se a string contiver algum caracter que não seja letras
print(teste6.islower())
print(teste7.islower())
print(teste7.isupper())
print(teste.lower())
print(teste5.upper())
print(teste6.swapcase())

#-------------------------------------------------------------------------------------------#
#title
#-------------------------------------------------------------------------------------------#

teste8 = ('estudo de python')
print(teste8.title())

#-------------------------------------------------------------------------------------------#
#split
#-------------------------------------------------------------------------------------------#

teste8 = ('estudo de python')
print(teste8.split())
print(teste8.split('t'))

#-------------------------------------------------------------------------------------------#
#repalce
#-------------------------------------------------------------------------------------------#

teste8 = ('estudo de python')
print(teste8.replace('python','programação'))

#-------------------------------------------------------------------------------------------#
#find
#-------------------------------------------------------------------------------------------#

teste2 = ('paralelepipido')
print(teste2.find('e'))
print(teste2.find('a'))
print(teste2.find('p'))

print(len(teste2))
print(teste2.ljust(18)) #ajusta adicionando caracteres no teste2 L = left
print(teste2.rjust(18)) #ajusta adicionando caracteres no teste2 R = Right
print(teste2.center(18)) #ajusta adicionando caracteres no teste2 C = Center

#-------------------------------------------------------------------------------------------#
#strip
#-------------------------------------------------------------------------------------------#

teste9 = ('   -python-esquerda')
teste10 = ('python-direita   ')
teste11 = ('   python-esq-dir   ')

print(teste9)
print(teste10)
print(teste11)

print(teste11.strip()) #Retira espaços em branco no começo e no fim

#----------------#
#lstrip
#----------------#

print(teste9.lstrip()) #Retira espaços em branco da esquerda

#----------------#
#rstrip
#----------------#

print(teste10.rstrip()) #Retira espaços em branco da direita

#===========================================================================================#
#Fatiamento de string
#===========================================================================================#

var1 = ('python')
print (var1[1:4])
print (var1[0:3])
print (var1[3:8])

#-------------------------------------------------------------------------------------------#
Desafio
#-------------------------------------------------------------------------------------------#

Crie uma senha automática para o usuário com os seguintes critérios
          -3primeiras letras do primeiro nome
          -3primeiras letras do segundo nome
          -ano de nascimento

first_name = ('Alex')
last_name = ('Avancini')
area = ('Financeiro')

#-------------------------------------------------------------------------------------------#

#===========================================================================================#
#Type
#===========================================================================================#

#Testar e verificar o tipo da variável

print(type(2) is int)
print(type(2.2) is float) #float pode registrar o valor de até 15 casas decimais depois da vírgula
print(type('python') is str)
print(type([1,2,3,4,5,6,7,8,9,10]) is list)
print(type((1,2,3,4,5,6,7,8,9,10)) is tuple)
print(type({"biologia": 1, "português":2, "matemática":3}) is dict)
print(type(True) is bool)
print(type(False) is bool)
print(type(2+2j) is complex)

a = 10
type(a)

b = 'biologia'
type(b)

c = 2.2
type(c)

print(a, "o type de a é", type(a))
print(b, "o type de b é", type(b))
print(c, "o type de c é", type(c))

#===========================================================================================#
#isistance
#===========================================================================================#

print(a, "é um numero inteiro?", isinstance(a,int))
print(a, "é um numero inteiro?", isinstance(a,str))
print(a, "é um numero inteiro?", isinstance(a,complex))

print(a, "é um numero inteiro?", isinstance(10,int))
print(b, "é um uma string?", isinstance(biologia,int))

#===========================================================================================#
LISTA
#===========================================================================================#

#-------------------------------------------------------------------------------------------#
#Lista tupple ()
#-------------------------------------------------------------------------------------------#

#tupple, dados imutaveis
lista1 = (2,4,6,8,10)
print(type(lista1))
print(type(lista1) is list)
print(type(lista1) is tuple)

#-------------------------------------------------------------------------------------------#
#Lista NÃO tupple
#-------------------------------------------------------------------------------------------#

#não tupple, dados mutaveis

lista2 = [20,40,60,80,100]
print(type(lista2))
print(type(lista2) is list)
print(type(lista2) is tuple)

#===========================================================================================#
#Alterando uma lista
#===========================================================================================#

lista1 = (2,4,6,8,10)
lista1[2]=20

#Lista tupple é uma lista fixa não modificada, definida nomomento da criação da variavel em lista, seu sinal é os ();
#Se não colocar parenteses no ato da criação da variável, equivale ao parenteses.

#Criando uma lista não tupple []

lista1 = [2,4,6,8,10]
lista1[2]=20
lista1


lista1 = 2,4,6,8,10
lista2 = [20,40,60,80,100]

lista1[1]=400
lista2[1]=3

print(lista1[1])
print(lista2[1])

#===========================================================================================#
#sum
#===========================================================================================#
lista2 = [2,4,6,8,10,12,14,16,18,20]
print(sum(lista2))

#===========================================================================================#
#insert
#===========================================================================================#

#Inserindo valors na lista

lista3 = [1,2,3,4,5,6,7,8,9]
lista3.insert(10,70)

#===========================================================================================#
#extend
#===========================================================================================#

x = [1, 2, 3, 4]
y = (5, 6, 7)
x.extend(y)
print(x)

x = [23, 24, 25, 26]
y = (72,73,74)
x.extend(y)
print(x)

# Equivalent to x.extend(y)
x = [23, 24, 25, 26]
y = (72,73,74)
x[len(x):] = y
print(x)

#===========================================================================================#
#remove
#===========================================================================================#

#removendo valores na lista
#remove por meio do dado
''deve ser utilizada apenas quando temos certeza que o valor está na lista, caso contrário
retorna um erro''

lista1 = [1,2,3,4,5,6,7,8,9,10]
lista1.remove(4)
print(lista1)

lista1 = [1,2,3,4,5,6,7,8,9,10]
lista1.remove(11)
print(lista1)

''Para resolver o problema de valor em listas [] podemos converter os valores em SET
para imprimir e assim usar a opção DISCARD''

#===========================================================================================#
#discard
#===========================================================================================#

#descarta (remove) valores na lista desde que sejam SET {}
#remove por meio do dado
''pode ser utilizado quando não temos certeza se o valor está presente na lista,
desta forma, não retorna erro como a opção REMOVE''

lista1 = [1,2,3,4,5,6,7,8,9,10]
lista1.discard(4)
print(lista1) #erro pois o comenao .discard não atua em lista []

lista1 = set([1,2,3,4,5,6,7,8,9,10])
lista1.discard(4)
print(lista1) #aceitável pois nesta caso foi passado o atributo SET {} na lista []

#---------------------#
#tentando remover um valor que não se encontra no intervalo declarado
#---------------------#

lista1 = set([1,2,3,4,5,6,7,8,9,10])
lista1.discard(11)
print(lista1) #aceitável pois nesta caso foi passado o atributo SET {} na lista []

#Embora o 11 não esteja na lista, não foi retornado um erro como quando usado o REMOVE

#===========================================================================================#
#pop
#===========================================================================================#

#remover por meio do número de indexação (pop)

lista2 = ['geogragia','português','matemáica','história','biologia']
lista2.pop(3)
print(lista2)

#===========================================================================================#
#clear
#===========================================================================================#

#removendo todos os valores de uma lista

lista1 = set([1,2,3,4,5,6,7,8,9,10])
lista1.clear()
print(lista1) # quando imprimimos um conjunto vazio, Python imprime set()

#===========================================================================================#
#sort
#===========================================================================================#

#Organizando a lista
#não retorna a lista

lista2 = ['geogragia','português','matemáica','história','biologia']
lista2.sort() #É necessário aplicar primeiro e depois imprimir
print(lista2)
#print(lista2.sort()) #não funciona

#---------------------#
#exemplo
#---------------------#

lista3 = [1, 2, 3, 5, 6, 7, 8, 9]
lista3.insert(10, 4)
print(lista3)  # 1º print

lista4 = [1, 2, 3, 5, 6, 7, 8, 9]
lista4.insert(10, 4)
print(lista4.sort())  # não funciona 'None' - 2º print
lista4.sort()
print(lista4)  # funciona - 3ºprint, mas com 1 linha a mais

lista5 = [1, 2, 3, 5, 6, 7, 8, 9]
lista5.insert(10, 4)
print(sorted(lista5))  # funciona - 4ºprint, mas com 1 linha a menos
#---------------------#

#===========================================================================================#
#sorted
#===========================================================================================#
#imprime a lista

lista2 = ['geogragia','português','matemáica','história','biologia']
print(sorted(lista2))

#-------------------------------------------------------------------------------------------#
Slice nas listas
#-------------------------------------------------------------------------------------------#
#em python a indexação começa no 0,no R começa no 1

print (lista1)
print (lista1[0])
print (lista1[1])
print (lista1[2])
print (lista1[3])
print (lista1[4])
print (lista1[0:3]
print (lista1[2:]) #a partir do 2
print (lista1[3:]) #a partir do 3
print (lista1[:3]) #apresenta a lista apenas até o valor 3, contando como inicio o 0.

#-------------------------------------------------------------------------------------------#
#Slice negativo
#-------------------------------------------------------------------------------------------#

frase1 = ('Python é uma linguagem de programação')

print(len(frase1))
print(frase1[-37])
print(frase1[-1])
print(frase1[-11:])
print(frase1[-11:-3])


#===========================================================================================#
#find
#===========================================================================================#

frase1 = ('Python é uma linguagem de programação')
print(frase1.find('ã'))
print(frase1.find('a')) #o primeiro valor informado encontrado

#Slice em strings
print(frase1[:23])
print(frase1[23:])

#===========================================================================================#
#index
#===========================================================================================#

#index, procurando o valor de indexação dentro da lista

animais = ["girafa", "cobra", "macaco", "formiga", "anta"]
print(animais)
print(animais.index("formiga"))
print(animais.index("cobra"))
print(animais.index("anta"))

#===========================================================================================#
#Saltando valores
#===========================================================================================#

frase1 = ('Python é uma linguagem de programação')
print(frase1[::1])
print(frase1[::2])
print(frase1[::3])

#===========================================================================================#
#invertendo o valor da variável (de trás para frente)
#===========================================================================================#

frase1 = ('Python é uma linguagem de programação')
print(frase1[::-1])

#===========================================================================================#
#max
#===========================================================================================#
lista2 = [2,4,6,8,10,12,14,16,18,20]
print(lista2)
print(max(lista2))
print('o número máximo do intervalo informado é: ', max(lista2))

#===========================================================================================#
#min
#===========================================================================================#
lista2 = [2,4,6,8,10,12,14,16,18,20]
print(lista2)
print(min(lista2))
print('o número mínimo do intervalo informado é: ', max(lista2))

#===========================================================================================#
#media
#===========================================================================================#

'''O python não tem uma função nativa para média ou mediana, para isso precisaremos
importar uma função. Veremos isso mais para frente.
Porém podemos resolver este problema por agora da seguine forma:'''

lista12 = [3,6,9,12,15,18,21,24,27,30]

soma_lista_12 = sum(lista12)
tam_lista_12 = len(lista12)
print(soma_lista_12 / tam_lista_12)

print(sum(lista12)/(len(lista12)))

media_lista12 = soma_lista_12 / tam_lista_12
print(media_lista12)



#===========================================================================================#
#set {}
#===========================================================================================#

#set é uma lista declarada de variáveis que passam a ser mostradas em ordem desordenada. 
#A ordem da desordenação da lista varia de acordo com cada vez que é declarada

lista2 = {2, 4, 6, 8, 10}
lista2
lista2 = {10, 8 , 6, 4, 2}
lista2
lista2 = {8, 6, 4, 10, 2}
lista2

''mprimindo duas vezes uma variável com dados repetidos, um com SET e outro sem SET,
como SET não aceita repetições, é retirado os valores repetidos na hora da impressão''

numeros = [1, 2, 2, 3, 3, 3]
numeros_distintos = set(numeros)

print("Números: ", numeros) #impressão sem SET
print("Números distintos: ", numeros_distintos) #impressão com SET

#-------------------------------------------------------------------------------------------#
#A função SET não aceita filtrar os dados da lista com a função =[]
#-------------------------------------------------------------------------------------------#

lista2 = {2, 4, 6, 8, 10}
lista2=[2]

#-------------------------------------------------------------------------------------------#
.union
#-------------------------------------------------------------------------------------------#

Concatenar duas listas SET com .union

a = {1, 2, 3, 4}
b = {3, 4, 5, 6}
print(a.union(b))

#como o SET não aceita repetições, ele retira os valores repetidos na impressão.

materias1 = {'português', 'matemática', 'biologia', 'geografia'}
materias2 = {'matemática', 'história', 'biologia', 'inglês', 'português'}

print(materias1)
print(materias2)
print(materias1.union(materias2))

#---------------------#
A = {0, 1, 3, 5, 7, 9}
B = {0, 2, 4, 6, 8}
C = A | B #forma alternativa de escrever materias1.union(materias2
print(C)
#---------------------#

#-------------------------------------------------------------------------------------------#
.union não pode ser utilizado em uma lista tuple
#-------------------------------------------------------------------------------------------#

lista0 = (2, 4, 6, 8, 10)
lista1 = (8, 10, 12, 14, 16, 18, 20)
print(lista0.union(lista1)) #não é aceitável
#print(lista0 + lista1) #aceitável

#-------------------------------------------------------------------------------------------#
lista2 = {2, 4, 6, 8, 10}
lista3 = {8, 10, 12, 14, 16, 18, 20}
print(lista2.union(lista3))

#-------------------------------------------------------------------------------------------#
.intersection
#-------------------------------------------------------------------------------------------#

materias1 = {'português', 'matemática', 'biologia', 'geografia'}
materias2 = {'matemática', 'história', 'biologia', 'inglês', 'português'}


print(materias1.intersection(materias2))

''Com o .intersection é retornado apenas os valores interseccionados, 
ou seja, que eles têm em comum''

#---------------------#
conjunto1 = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10}
conjunto2 = {5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}

print(conjunto1.intersection(conjunto2))
print(conjunto1 & conjunto2) #forma alternativa de escrever conjuno1.intersection(conjunto2)


A = {0, 1, 3, 5, 7, 9}
B = {0, 2, 4, 6, 8, 9}
print(A.intersection(B))
C = A & B #forma alternativa de escrever A.intersection(B)
print(C)
print(A & B)

#---------------------#

#-------------------------------------------------------------------------------------------#
- diferença
#-------------------------------------------------------------------------------------------#


A = {0, 1, 2, 3, 5, 7, 9}
B = {0, 1, 2, 4, 6, 8, 9}

C = A - B 
D = B - A

print(C)
print(D)

#===========================================================================================#
CONVERSÃO
#===========================================================================================#

#-------------------------------------------------------------------------------------------#
#Convertendo um valor float em int
nota1 = int(9.8)
print(nota1, type(nota1))
#-------------------------------------------------------------------------------------------#

#-------------------------------------------------------------------------------------------#
#um valor float não informado ficando float
nota2 = 9.8
print(nota2, type(nota2))
#-------------------------------------------------------------------------------------------#

#-------------------------------------------------------------------------------------------#
#Convertendo um valor int em float
nota3 = float(7)
print(nota3, type(nota3))
#-------------------------------------------------------------------------------------------#

#-------------------------------------------------------------------------------------------#
#Convertendo um valor int em str
nota4 = str(6)
print(nota4, type(nota4))
#-------------------------------------------------------------------------------------------#

#-------------------------------------------------------------------------------------------#
#Convertendo um valor float em str
nota5 = str(7.7)
print(nota5, type(nota5))
#-------------------------------------------------------------------------------------------#

#-------------------------------------------------------------------------------------------#
#Convertendo str em int
nota6 = int('5')
print(nota6, type(nota6))
#-------------------------------------------------------------------------------------------#

#-------------------------------------------------------------------------------------------#
#Convertendo str em float
nota7 = float('5')
print(nota7, type(nota7))
#-------------------------------------------------------------------------------------------#

#-------------------------------------------------------------------------------------------#
#Convertendo um valor em hexadecimal
#-------------------------------------------------------------------------------------------#
print(hex(80))
print(hex(2))
print(hex(81))
print(hex(100))
print(hex(1000))
print(hex(10000))
print(hex(1000000000))
#impossivel converter float ou string para hexadecimal, apenas inteiro.

#-------------------------------------------------------------------------------------------#
#Convertendo um valor em binario - 0 ou 1
#-------------------------------------------------------------------------------------------#

print(bin(80))
print(bin(2))
print(bin(81))
print(bin(100))
print(bin(1000))
print(bin(10000))
print(bin(1000000000))
#impossivel converter string ou float

#-------------------------------------------------------------------------------------------#


#-------------------------------------------------------------------------------------------#
#Converter um número negativo e retornar o mesmo valor positivo
#-------------------------------------------------------------------------------------------#

print(abs(-8))
print(abs(-200))
print(abs(-2))
print(abs(8))

#-------------------------------------------------------------------------------------------#
#pow
#-------------------------------------------------------------------------------------------#

#Potenciação - ^
#retorna um valor na potencia desejada

print(pow(2,2))
print(pow(5,5))
print(pow(3,3))

#-------------------------------------------------------------------------------------------#
#round
#-------------------------------------------------------------------------------------------#

#Arredondar um valor float
print(round(3.14159265359)) #pi
print(round(3.14159265359,2))
print(round(3.14159265359,3))
print(round(3.14159265359,4))
#-------------------------------------------------------------------------------------------#


#Faltou acrescentar o dictionary (dict)

#Download deste arquivo via terminal:
wget https://raw.githubusercontent.com/alexavancini/python/master/arquivo1

#Download pela pela página via brownser
https://github.com/alexavancini/python
